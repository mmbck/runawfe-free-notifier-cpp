/* soapServerAPIBindingProxy.cpp
   Generated by gSOAP 2.8.62 for ServerAPI.h

gSOAP XML Web services tools
Copyright (C) 2000-2018, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include "stdafx.h"
#include "ServerAPIBindingProxy.h"

ServerAPIBindingProxy::ServerAPIBindingProxy()
{	this->soap = soap_new();
	this->soap_own = true;
	ServerAPIBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

ServerAPIBindingProxy::ServerAPIBindingProxy(const ServerAPIBindingProxy& rhs)
{	this->soap = rhs.soap;
	this->soap_own = false;
	this->soap_endpoint = rhs.soap_endpoint;
}

ServerAPIBindingProxy::ServerAPIBindingProxy(struct soap *_soap)
{	this->soap = _soap;
	this->soap_own = false;
	ServerAPIBindingProxy_init(_soap->imode, _soap->omode);
}

ServerAPIBindingProxy::ServerAPIBindingProxy(const char *endpoint)
{	this->soap = soap_new();
	this->soap_own = true;
	ServerAPIBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = endpoint;
}

ServerAPIBindingProxy::ServerAPIBindingProxy(soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	ServerAPIBindingProxy_init(iomode, iomode);
}

ServerAPIBindingProxy::ServerAPIBindingProxy(const char *endpoint, soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	ServerAPIBindingProxy_init(iomode, iomode);
	soap_endpoint = endpoint;
}

ServerAPIBindingProxy::ServerAPIBindingProxy(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->soap_own = true;
	ServerAPIBindingProxy_init(imode, omode);
}

ServerAPIBindingProxy::~ServerAPIBindingProxy()
{	if (this->soap_own)
		soap_free(this->soap);
}

void ServerAPIBindingProxy::ServerAPIBindingProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] = {
        {"SOAP-ENV", "http://schemas.xmlsoap.org/soap/envelope/", "http://www.w3.org/*/soap-envelope", NULL},
        {"SOAP-ENC", "http://schemas.xmlsoap.org/soap/encoding/", "http://www.w3.org/*/soap-encoding", NULL},
        {"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
        {"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
        {"ns1", "http://impl.service.wfe.runa.ru/", NULL, NULL},
        {NULL, NULL, NULL, NULL}
    };
	soap_set_namespaces(this->soap, namespaces);
}

ServerAPIBindingProxy *ServerAPIBindingProxy::copy()
{	ServerAPIBindingProxy *dup = SOAP_NEW_UNMANAGED(ServerAPIBindingProxy);
	if (dup)
		soap_copy_context(dup->soap, this->soap);
	return dup;
}

ServerAPIBindingProxy& ServerAPIBindingProxy::operator=(const ServerAPIBindingProxy& rhs)
{	if (this->soap != rhs.soap)
	{	if (this->soap_own)
			soap_free(this->soap);
		this->soap = rhs.soap;
		this->soap_own = false;
		this->soap_endpoint = rhs.soap_endpoint;
	}
	return *this;
}

void ServerAPIBindingProxy::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void ServerAPIBindingProxy::reset()
{	this->destroy();
	soap_done(this->soap);
	soap_initialize(this->soap);
	ServerAPIBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void ServerAPIBindingProxy::soap_noheader()
{	this->soap->header = NULL;
}

::SOAP_ENV__Header *ServerAPIBindingProxy::soap_header()
{	return this->soap->header;
}

::SOAP_ENV__Fault *ServerAPIBindingProxy::soap_fault()
{	return this->soap->fault;
}

const char *ServerAPIBindingProxy::soap_fault_string()
{	return *soap_faultstring(this->soap);
}

const char *ServerAPIBindingProxy::soap_fault_detail()
{	return *soap_faultdetail(this->soap);
}

int ServerAPIBindingProxy::soap_close_socket()
{	return soap_closesock(this->soap);
}

int ServerAPIBindingProxy::soap_force_close_socket()
{	return soap_force_closesock(this->soap);
}

void ServerAPIBindingProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void ServerAPIBindingProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}
#endif

char *ServerAPIBindingProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

int ServerAPIBindingProxy::authenticateByCallerPrincipal(const char *endpoint, const char *soap_action, ns1__authenticateByCallerPrincipal *ns1__authenticateByCallerPrincipal_, ns1__authenticateByCallerPrincipalResponse &ns1__authenticateByCallerPrincipalResponse_)
{	struct soap *soap = this->soap;
	struct __ns1__authenticateByCallerPrincipal soap_tmp___ns1__authenticateByCallerPrincipal;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8080/wfe-service-4.3.0/AuthenticationWebService/AuthenticationAPI http://localhost:8080/wfe-service-4.3.0/TaskWebService/TaskAPI";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__authenticateByCallerPrincipal.ns1__authenticateByCallerPrincipal_ = ns1__authenticateByCallerPrincipal_;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__authenticateByCallerPrincipal(soap, &soap_tmp___ns1__authenticateByCallerPrincipal);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__authenticateByCallerPrincipal(soap, &soap_tmp___ns1__authenticateByCallerPrincipal, "-ns1:authenticateByCallerPrincipal", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__authenticateByCallerPrincipal(soap, &soap_tmp___ns1__authenticateByCallerPrincipal, "-ns1:authenticateByCallerPrincipal", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__authenticateByCallerPrincipalResponse*>(&ns1__authenticateByCallerPrincipalResponse_)) // NULL ref?
		return soap_closesock(soap);
	ns1__authenticateByCallerPrincipalResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__authenticateByCallerPrincipalResponse_.soap_get(soap, "ns1:authenticateByCallerPrincipalResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServerAPIBindingProxy::authenticateByLoginPassword(const char *endpoint, const char *soap_action, ns1__authenticateByLoginPassword *ns1__authenticateByLoginPassword_, ns1__authenticateByLoginPasswordResponse &ns1__authenticateByLoginPasswordResponse_)
{	struct soap *soap = this->soap;
	struct __ns1__authenticateByLoginPassword soap_tmp___ns1__authenticateByLoginPassword;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8080/wfe-service-4.3.0/AuthenticationWebService/AuthenticationAPI http://localhost:8080/wfe-service-4.3.0/TaskWebService/TaskAPI";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__authenticateByLoginPassword.ns1__authenticateByLoginPassword_ = ns1__authenticateByLoginPassword_;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__authenticateByLoginPassword(soap, &soap_tmp___ns1__authenticateByLoginPassword);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__authenticateByLoginPassword(soap, &soap_tmp___ns1__authenticateByLoginPassword, "-ns1:authenticateByLoginPassword", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__authenticateByLoginPassword(soap, &soap_tmp___ns1__authenticateByLoginPassword, "-ns1:authenticateByLoginPassword", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__authenticateByLoginPasswordResponse*>(&ns1__authenticateByLoginPasswordResponse_)) // NULL ref?
		return soap_closesock(soap);
	ns1__authenticateByLoginPasswordResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__authenticateByLoginPasswordResponse_.soap_get(soap, "ns1:authenticateByLoginPasswordResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServerAPIBindingProxy::authenticateByTrustedPrincipal(const char *endpoint, const char *soap_action, ns1__authenticateByTrustedPrincipal *ns1__authenticateByTrustedPrincipal_, ns1__authenticateByTrustedPrincipalResponse &ns1__authenticateByTrustedPrincipalResponse_)
{	struct soap *soap = this->soap;
	struct __ns1__authenticateByTrustedPrincipal soap_tmp___ns1__authenticateByTrustedPrincipal;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8080/wfe-service-4.3.0/AuthenticationWebService/AuthenticationAPI http://localhost:8080/wfe-service-4.3.0/TaskWebService/TaskAPI";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__authenticateByTrustedPrincipal.ns1__authenticateByTrustedPrincipal_ = ns1__authenticateByTrustedPrincipal_;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__authenticateByTrustedPrincipal(soap, &soap_tmp___ns1__authenticateByTrustedPrincipal);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__authenticateByTrustedPrincipal(soap, &soap_tmp___ns1__authenticateByTrustedPrincipal, "-ns1:authenticateByTrustedPrincipal", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__authenticateByTrustedPrincipal(soap, &soap_tmp___ns1__authenticateByTrustedPrincipal, "-ns1:authenticateByTrustedPrincipal", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__authenticateByTrustedPrincipalResponse*>(&ns1__authenticateByTrustedPrincipalResponse_)) // NULL ref?
		return soap_closesock(soap);
	ns1__authenticateByTrustedPrincipalResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__authenticateByTrustedPrincipalResponse_.soap_get(soap, "ns1:authenticateByTrustedPrincipalResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServerAPIBindingProxy::authenticateByKerberos(const char *endpoint, const char *soap_action, ns1__authenticateByKerberos *ns1__authenticateByKerberos_, ns1__authenticateByKerberosResponse &ns1__authenticateByKerberosResponse_)
{	struct soap *soap = this->soap;
	struct __ns1__authenticateByKerberos soap_tmp___ns1__authenticateByKerberos;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8080/wfe-service-4.3.0/AuthenticationWebService/AuthenticationAPI http://localhost:8080/wfe-service-4.3.0/TaskWebService/TaskAPI";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__authenticateByKerberos.ns1__authenticateByKerberos_ = ns1__authenticateByKerberos_;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__authenticateByKerberos(soap, &soap_tmp___ns1__authenticateByKerberos);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__authenticateByKerberos(soap, &soap_tmp___ns1__authenticateByKerberos, "-ns1:authenticateByKerberos", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__authenticateByKerberos(soap, &soap_tmp___ns1__authenticateByKerberos, "-ns1:authenticateByKerberos", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__authenticateByKerberosResponse*>(&ns1__authenticateByKerberosResponse_)) // NULL ref?
		return soap_closesock(soap);
	ns1__authenticateByKerberosResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__authenticateByKerberosResponse_.soap_get(soap, "ns1:authenticateByKerberosResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServerAPIBindingProxy::reassignTask(const char *endpoint, const char *soap_action, ns1__reassignTask *ns1__reassignTask_, ns1__reassignTaskResponse &ns1__reassignTaskResponse_)
{	struct soap *soap = this->soap;
	struct __ns1__reassignTask soap_tmp___ns1__reassignTask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8080/wfe-service-4.3.0/AuthenticationWebService/AuthenticationAPI http://localhost:8080/wfe-service-4.3.0/TaskWebService/TaskAPI";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__reassignTask.ns1__reassignTask_ = ns1__reassignTask_;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__reassignTask(soap, &soap_tmp___ns1__reassignTask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__reassignTask(soap, &soap_tmp___ns1__reassignTask, "-ns1:reassignTask", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__reassignTask(soap, &soap_tmp___ns1__reassignTask, "-ns1:reassignTask", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__reassignTaskResponse*>(&ns1__reassignTaskResponse_)) // NULL ref?
		return soap_closesock(soap);
	ns1__reassignTaskResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__reassignTaskResponse_.soap_get(soap, "ns1:reassignTaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServerAPIBindingProxy::getMyTasks(const char *endpoint, const char *soap_action, ns1__getMyTasks *ns1__getMyTasks_, ns1__getMyTasksResponse &ns1__getMyTasksResponse_)
{	struct soap *soap = this->soap;
	struct __ns1__getMyTasks soap_tmp___ns1__getMyTasks;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8080/wfe-service-4.3.0/AuthenticationWebService/AuthenticationAPI http://localhost:8080/wfe-service-4.3.0/TaskWebService/TaskAPI";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__getMyTasks.ns1__getMyTasks_ = ns1__getMyTasks_;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__getMyTasks(soap, &soap_tmp___ns1__getMyTasks);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getMyTasks(soap, &soap_tmp___ns1__getMyTasks, "-ns1:getMyTasks", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getMyTasks(soap, &soap_tmp___ns1__getMyTasks, "-ns1:getMyTasks", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__getMyTasksResponse*>(&ns1__getMyTasksResponse_)) // NULL ref?
		return soap_closesock(soap);
	ns1__getMyTasksResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getMyTasksResponse_.soap_get(soap, "ns1:getMyTasksResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServerAPIBindingProxy::markTaskOpened(const char *endpoint, const char *soap_action, ns1__markTaskOpened *ns1__markTaskOpened_, ns1__markTaskOpenedResponse &ns1__markTaskOpenedResponse_)
{	struct soap *soap = this->soap;
	struct __ns1__markTaskOpened soap_tmp___ns1__markTaskOpened;
	struct __ns1__markTaskOpenedResponse *soap_tmp___ns1__markTaskOpenedResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8080/wfe-service-4.3.0/AuthenticationWebService/AuthenticationAPI http://localhost:8080/wfe-service-4.3.0/TaskWebService/TaskAPI";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__markTaskOpened.ns1__markTaskOpened_ = ns1__markTaskOpened_;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__markTaskOpened(soap, &soap_tmp___ns1__markTaskOpened);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__markTaskOpened(soap, &soap_tmp___ns1__markTaskOpened, "-ns1:markTaskOpened", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__markTaskOpened(soap, &soap_tmp___ns1__markTaskOpened, "-ns1:markTaskOpened", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__markTaskOpenedResponse*>(&ns1__markTaskOpenedResponse_)) // NULL ref?
		return soap_closesock(soap);
	ns1__markTaskOpenedResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp___ns1__markTaskOpenedResponse = soap_get___ns1__markTaskOpenedResponse(soap, NULL, "-ns1:markTaskOpenedResponse", NULL);
	if (!soap_tmp___ns1__markTaskOpenedResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	ns1__markTaskOpenedResponse_ = soap_tmp___ns1__markTaskOpenedResponse->ns1__markTaskOpenedResponse_;
	return soap_closesock(soap);
}

int ServerAPIBindingProxy::assignTask(const char *endpoint, const char *soap_action, ns1__assignTask *ns1__assignTask_, ns1__assignTaskResponse &ns1__assignTaskResponse_)
{	struct soap *soap = this->soap;
	struct __ns1__assignTask soap_tmp___ns1__assignTask;
	struct __ns1__assignTaskResponse *soap_tmp___ns1__assignTaskResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8080/wfe-service-4.3.0/AuthenticationWebService/AuthenticationAPI http://localhost:8080/wfe-service-4.3.0/TaskWebService/TaskAPI";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__assignTask.ns1__assignTask_ = ns1__assignTask_;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__assignTask(soap, &soap_tmp___ns1__assignTask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__assignTask(soap, &soap_tmp___ns1__assignTask, "-ns1:assignTask", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__assignTask(soap, &soap_tmp___ns1__assignTask, "-ns1:assignTask", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__assignTaskResponse*>(&ns1__assignTaskResponse_)) // NULL ref?
		return soap_closesock(soap);
	ns1__assignTaskResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp___ns1__assignTaskResponse = soap_get___ns1__assignTaskResponse(soap, NULL, "-ns1:assignTaskResponse", NULL);
	if (!soap_tmp___ns1__assignTaskResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	ns1__assignTaskResponse_ = soap_tmp___ns1__assignTaskResponse->ns1__assignTaskResponse_;
	return soap_closesock(soap);
}

int ServerAPIBindingProxy::getTasks(const char *endpoint, const char *soap_action, ns1__getTasks *ns1__getTasks_, ns1__getTasksResponse &ns1__getTasksResponse_)
{	struct soap *soap = this->soap;
	struct __ns1__getTasks soap_tmp___ns1__getTasks;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8080/wfe-service-4.3.0/AuthenticationWebService/AuthenticationAPI http://localhost:8080/wfe-service-4.3.0/TaskWebService/TaskAPI";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__getTasks.ns1__getTasks_ = ns1__getTasks_;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__getTasks(soap, &soap_tmp___ns1__getTasks);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getTasks(soap, &soap_tmp___ns1__getTasks, "-ns1:getTasks", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getTasks(soap, &soap_tmp___ns1__getTasks, "-ns1:getTasks", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__getTasksResponse*>(&ns1__getTasksResponse_)) // NULL ref?
		return soap_closesock(soap);
	ns1__getTasksResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getTasksResponse_.soap_get(soap, "ns1:getTasksResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServerAPIBindingProxy::completeTaskWS(const char *endpoint, const char *soap_action, ns1__completeTaskWS *ns1__completeTaskWS_, ns1__completeTaskWSResponse &ns1__completeTaskWSResponse_)
{	struct soap *soap = this->soap;
	struct __ns1__completeTaskWS soap_tmp___ns1__completeTaskWS;
	struct __ns1__completeTaskWSResponse *soap_tmp___ns1__completeTaskWSResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8080/wfe-service-4.3.0/AuthenticationWebService/AuthenticationAPI http://localhost:8080/wfe-service-4.3.0/TaskWebService/TaskAPI";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__completeTaskWS.ns1__completeTaskWS_ = ns1__completeTaskWS_;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__completeTaskWS(soap, &soap_tmp___ns1__completeTaskWS);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__completeTaskWS(soap, &soap_tmp___ns1__completeTaskWS, "-ns1:completeTaskWS", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__completeTaskWS(soap, &soap_tmp___ns1__completeTaskWS, "-ns1:completeTaskWS", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__completeTaskWSResponse*>(&ns1__completeTaskWSResponse_)) // NULL ref?
		return soap_closesock(soap);
	ns1__completeTaskWSResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp___ns1__completeTaskWSResponse = soap_get___ns1__completeTaskWSResponse(soap, NULL, "-ns1:completeTaskWSResponse", NULL);
	if (!soap_tmp___ns1__completeTaskWSResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	ns1__completeTaskWSResponse_ = soap_tmp___ns1__completeTaskWSResponse->ns1__completeTaskWSResponse_;
	return soap_closesock(soap);
}

int ServerAPIBindingProxy::getProcessTasks(const char *endpoint, const char *soap_action, ns1__getProcessTasks *ns1__getProcessTasks_, ns1__getProcessTasksResponse &ns1__getProcessTasksResponse_)
{	struct soap *soap = this->soap;
	struct __ns1__getProcessTasks soap_tmp___ns1__getProcessTasks;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8080/wfe-service-4.3.0/AuthenticationWebService/AuthenticationAPI http://localhost:8080/wfe-service-4.3.0/TaskWebService/TaskAPI";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__getProcessTasks.ns1__getProcessTasks_ = ns1__getProcessTasks_;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__getProcessTasks(soap, &soap_tmp___ns1__getProcessTasks);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getProcessTasks(soap, &soap_tmp___ns1__getProcessTasks, "-ns1:getProcessTasks", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getProcessTasks(soap, &soap_tmp___ns1__getProcessTasks, "-ns1:getProcessTasks", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__getProcessTasksResponse*>(&ns1__getProcessTasksResponse_)) // NULL ref?
		return soap_closesock(soap);
	ns1__getProcessTasksResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getProcessTasksResponse_.soap_get(soap, "ns1:getProcessTasksResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServerAPIBindingProxy::getTask(const char *endpoint, const char *soap_action, ns1__getTask *ns1__getTask_, ns1__getTaskResponse &ns1__getTaskResponse_)
{	struct soap *soap = this->soap;
	struct __ns1__getTask soap_tmp___ns1__getTask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8080/wfe-service-4.3.0/AuthenticationWebService/AuthenticationAPI http://localhost:8080/wfe-service-4.3.0/TaskWebService/TaskAPI";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__getTask.ns1__getTask_ = ns1__getTask_;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__getTask(soap, &soap_tmp___ns1__getTask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getTask(soap, &soap_tmp___ns1__getTask, "-ns1:getTask", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getTask(soap, &soap_tmp___ns1__getTask, "-ns1:getTask", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__getTaskResponse*>(&ns1__getTaskResponse_)) // NULL ref?
		return soap_closesock(soap);
	ns1__getTaskResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getTaskResponse_.soap_get(soap, "ns1:getTaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServerAPIBindingProxy::reassignTasks(const char *endpoint, const char *soap_action, ns1__reassignTasks *ns1__reassignTasks_, ns1__reassignTasksResponse &ns1__reassignTasksResponse_)
{	struct soap *soap = this->soap;
	struct __ns1__reassignTasks soap_tmp___ns1__reassignTasks;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8080/wfe-service-4.3.0/AuthenticationWebService/AuthenticationAPI http://localhost:8080/wfe-service-4.3.0/TaskWebService/TaskAPI";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__reassignTasks.ns1__reassignTasks_ = ns1__reassignTasks_;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__reassignTasks(soap, &soap_tmp___ns1__reassignTasks);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__reassignTasks(soap, &soap_tmp___ns1__reassignTasks, "-ns1:reassignTasks", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__reassignTasks(soap, &soap_tmp___ns1__reassignTasks, "-ns1:reassignTasks", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__reassignTasksResponse*>(&ns1__reassignTasksResponse_)) // NULL ref?
		return soap_closesock(soap);
	ns1__reassignTasksResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__reassignTasksResponse_.soap_get(soap, "ns1:reassignTasksResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
